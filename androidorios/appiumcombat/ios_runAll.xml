<?xml version="1.0" encoding="UTF-8"?>
<suite name="appium实战-Android篇" parallel="tests" thread-count="1">

	<!--server地址 -->
	<parameter name="serverURL" value="http://127.0.0.1:4723/wd/hub" />
	<!--automationName为selendroid or appium，如果sdk版本>=17请使用appium；如果sdk版本<=17请使用selendroid -->
	<parameter name="automationName" value="Appium" />
	<!-- 测试平台 iOS和Android -->
	<parameter name="platformName" value="iOS" />
	<!-- 平台版本 -->
	<parameter name="platformVersion" value="8.4" />
	<!-- 设备名字，可随意起名字，但是要有意义 -->
	<parameter name="deviceName" value="iPhone 5s" />
	<!-- android app路径 -->
	<parameter name="androidAppPath" value="res/app/android/com.ysyc.itaxer_5.0.0_33.apk" />
	<!-- ios app路径 -->
	<parameter name="iosAppPath" value="res/app/ios/eTax.ipa" />
	<!-- ios app 的包 -->
	<parameter name="iosAppPackage" value="com.uknower.itax" />
	<!--app的包 -->
	<parameter name="appPackage" value="com.ysyc.itaxer" />
	<!--app的 activity -->
	<parameter name="appActivity" value="com.ysyc.itaxer.ui.FlashActivity" />
	<!--是否支持unicode输入设置为true可以输入中文字符 -->
	<parameter name="unicodeKeyboard" value="true" />
	<!-- 重置键盘输入法 -->
	<parameter name="resetKeyboard" value="true" />
	<!--设备UDID iPhone真机使用或者android并行测试可以使用 -->
	<parameter name="udid" value="" />
	<!-- 设置为true之后会覆盖当前session -->
	<parameter name="sessionOverride" value="true" />
	<!-- 进程等待1秒中的控制时间，单位是秒 -->
	<parameter name="sleepTime" value="1" />
	<!-- 页面元素15秒不出现超时时间 -->
	<parameter name="elementTimeOut" value="15" />
	<!-- app属性文件 -->
	<parameter name="appFilePath" value="res/properties/ios/app.properties" />



	<test name="首页" preserve-order="true">
		<packages>
		    <package name="com.young.appiumcombat.testcases.ios.init" />
		</packages>
	</test>  
	<test name="主页" preserve-order="true">
		<packages>
		    <package name="com.young.appiumcombat.testcases.ios.home" />
		</packages>
	</test>
	<!--<test verbose="2" name="电子发票" preserve-order="true">-->
		<!--<packages>-->
			<!--<package name="com.young.appiumcombat.testcases.ios.electronicinvoice" />-->
		<!--</packages>-->
	<!--</test>-->
	<!--<test name="税务指导" preserve-order="true">-->
		<!--<packages>-->
			<!--<package name="com.young.appiumcombat.testcases.ios.taxguide" />-->
		<!--</packages>-->
	<!--</test>    -->
	
<!-- 	<test verbose="2" name="申报缴税" preserve-order="true">
		<packages>
			<package name="com.young.appiumcombat.testcases.ios.applytax" />
		</packages>
	</test>   
	 -->
		    <!-- <groups>
		        <run>
		            <include name ="test.workflow" />  
		            <include name ="com" />  
		            run里面的需要在每个用例中，定义用例所属的组，然后这里如果包含改组，改组下的用例便会执行，否则不执行 
		            在Test里面添加：(groups = { "come" })
		            在Before/After+Method(其他类似)中需要如下：
		            @AfterMethod
					@Configuration(afterTestMethod= true, groups = {"test.workflow"})
		        </run>
		    </groups> -->

	<listeners>
		<!-- excel报告 -->
		<listener
			class-name="com.young.appiumcombat.plugins.excelReporter.TestResultListener" />
		<listener class-name="com.young.appiumcombat.plugins.excelReporter.ExcelReporter" /> 

		<!-- html报告 -->
		<!--  <listener class-name="com.young.appiumcombat.plugins.htmlReporter.TestResultListener" /> 
		<listener class-name="com.young.appiumcombat.plugins.htmlReporter.RetryListener" />
		 <listener class-name="com.young.appiumcombat.plugins.htmlReporter.PowerEmailableReporter" /> -->
	</listeners>

</suite> 